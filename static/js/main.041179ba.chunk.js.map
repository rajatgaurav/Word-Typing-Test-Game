{"version":3,"sources":["util/stream.js","Component/Heading/Heading.jsx","Component/Display/Display.jsx","Component/Input/Input.jsx","util/useKeyPress.js","Component/Timer/Timer.jsx","Component/Credit/Credit.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["alphabets","randomeStreamGenerator","arr","length","num","Math","floor","random","includes","push","join","Heading","react_default","a","createElement","className","Display","props","txt","Input","_useState","useState","keyPress","_useState2","Object","slicedToArray","input","setInput","type","ref","refHook","placeholder","value","onChange","event","onClick","resetFn","useKeyPress","callbackFn","setKeyPress","useEffect","downHandler","_ref","key","test","upHandler","window","addEventListener","removeEventListener","Timer","time","bestScores","bestScore","toFixed","Credit","id","defaultChecked","e","target","parentElement","classList","add","htmlFor","autoFocusFn","stream","App","inputRef","useRef","outgoingChar","setOutgoingChar","_useState3","charAt","_useState4","currentChar","setCurrentChar","_useState5","substring","_useState6","upcomingChar","setUpcomingChar","_useState7","_useState8","score","setScore","_useState9","_useState10","isTimerRunning","setIsTimerRunning","_useState11","localStorage","highScore","_useState12","setHighScore","_useTimer","useTimer","interval","step","start","pause","reset","advanceTime","copyOutgoingChar","copyUpcomingChar","toUpperCase","JSON","stringify","Component_Credit_Credit","current","focus","Component_Heading_Heading","Component_Display_Display","Component_Timer_Timer","Component_Input_Input","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","setItem","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App_0"],"mappings":"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","file":"static/js/main.041179ba.chunk.js","sourcesContent":["const alphabets = [\n  \"A\",\n  \"B\",\n  \"C\",\n  \"D\",\n  \"E\",\n  \"F\",\n  \"G\",\n  \"H\",\n  \"I\",\n  \"J\",\n  \"K\",\n  \"L\",\n  \"M\",\n  \"N\",\n  \"O\",\n  \"P\",\n  \"Q\",\n  \"R\",\n  \"S\",\n  \"T\",\n  \"U\",\n  \"V\",\n  \"W\",\n  \"X\",\n  \"Y\",\n  \"Z\",\n];\n\nexport const randomeStreamGenerator = () => {\n  /* Do not repeate any charachter */\n  let arr = [];\n  while (arr.length < 20) {\n    /* Generate randome number between 0 to 25 */\n    let num = Math.floor(Math.random() * 25);\n    if (!arr.includes(alphabets[num])) {\n      arr.push(alphabets[num]);\n    }\n  }\n  return arr.join(\"\");\n\n  /*\n  // Repeatation possible\n  return new Array(20)\n    .fill()\n    .map(() => {\n      // Generate randome number between 0 to 25 \n      let num = Math.floor(Math.random() * 25);\n      return alphabets[num];\n    })\n    .join(\"\");\n    */\n};\n","import React from \"react\";\nimport \"./Heading.css\";\n\nconst txt1 = \"type the alphabet\";\nconst txt2 =\n  \"Typing game to see how fast you type. Timer starts when you do :)\";\n\nconst Heading = () => {\n  return (\n    <div className=\"heading\">\n      <h1>{txt1}</h1>\n      <span>{txt2}</span>\n    </div>\n  );\n};\n\nexport default Heading;\n","import React from \"react\";\nimport \"./Display.css\";\n\nconst Display = (props) => {\n  return <div className=\"display\">{props.txt}</div>;\n};\n\nexport default Display;\n","import React, { useState } from \"react\";\nimport \"./Input.css\";\n\nconst Input = (props) => {\n  const [input, setInput] = useState(props.keyPress);\n  return (\n    <div className=\"input-form\">\n      <input\n        type=\"text\"\n        ref={props.refHook}\n        className=\"input-field\"\n        placeholder=\"Type Here\"\n        value={props.value}\n        onChange={(event) => setInput(input + props.keyPress)}\n      />\n      <button className=\"reset\" onClick={props.resetFn}>\n        Reset\n      </button>\n    </div>\n  );\n};\n\nexport default Input;\n","import { useEffect, useState } from \"react\";\n\nconst useKeyPress = (callbackFn) => {\n  const [keyPress, setKeyPress] = useState();\n\n  useEffect(() => {\n    const downHandler = ({ key }) => {\n      let regex = /^[a-zA-Z]*$/;\n      if (keyPress !== key && regex.test(key) && key.length === 1) {\n        setKeyPress(key);\n        callbackFn && callbackFn(key);\n      }\n    };\n\n    const upHandler = () => {\n      setKeyPress(null);\n    };\n\n    window.addEventListener(\"keydown\", downHandler);\n    window.addEventListener(\"keyup\", upHandler);\n\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n      window.removeEventListener(\"keyup\", upHandler);\n    };\n  });\n\n  return keyPress;\n};\n\nexport default useKeyPress;\n","import React from \"react\";\nimport \"./Timer.css\";\n\nconst Timer = (props) => {\n  let time = props.time / 1000;\n  let bestScores = props.bestScore / 1000;\n  return (\n    <div className=\"timer\">\n      <div className=\"curr-time\">\n        <span>Timer :</span>\n        <span>{time.toFixed(3)}s</span>\n      </div>\n      <div className=\"best-score\">\n        <span>my best time :</span>\n        <span>{bestScores.toFixed(3)}s!</span>\n      </div>\n    </div>\n  );\n};\n\nexport default Timer;\n","import React, { useState } from \"react\";\nimport \"./Credit.css\";\n\nconst Credit = (props) => {\n  return (\n    <div className=\"credit\">\n      <input\n        type=\"checkbox\"\n        id=\"close\"\n        defaultChecked={false}\n        onChange={(e) => {\n          e.target.parentElement.classList.add(\"closed\");\n        }}\n      />\n      <label\n        htmlFor=\"close\"\n        className=\"close-credit\"\n        onClick={props.autoFocusFn}\n      >\n        x\n      </label>\n      <div className=\"credit-detail\">\n        <h3>A Simple</h3>\n        <h1>Word Typing Game</h1>\n        <span>created by</span>\n        <h2>Rajat Gaurav</h2>\n        <div>\n          Tech Stack : <code>React JS, CSS</code>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Credit;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { useTimer } from \"use-timer\";\nimport { randomeStreamGenerator } from \"./util/stream\";\nimport Heading from \"./Component/Heading/Heading\";\nimport Display from \"./Component/Display/Display\";\nimport Input from \"./Component/Input/Input\";\nimport useKeyPress from \"./util/useKeyPress\";\nimport \"./App.css\";\nimport Timer from \"./Component/Timer/Timer\";\nimport Credit from \"./Component/Credit/Credit\";\n\nlet stream = randomeStreamGenerator();\n// console.log(stream);\n\nconst App = () => {\n  const inputRef = useRef(null);\n  const [outgoingChar, setOutgoingChar] = useState(\"\");\n  const [currentChar, setCurrentChar] = useState(stream.charAt(0));\n  const [upcomingChar, setUpcomingChar] = useState(stream.substring(1));\n  const [score, setScore] = useState(0);\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [highScore, setHighScore] = useState(localStorage.highScore);\n  const { time, start, pause, reset, advanceTime } = useTimer({\n    interval: 15,\n    step: 15,\n  });\n\n  const resetFn = () => {\n    stream = randomeStreamGenerator();\n    setOutgoingChar(\"\");\n    setCurrentChar(stream.charAt(0));\n    setUpcomingChar(stream.substring(1));\n    setScore(0);\n    setIsTimerRunning(false);\n    reset();\n  };\n\n  const autoFocus = () => {\n    inputRef.current.focus();\n  };\n\n  let keyPress = useKeyPress((key) => {\n    let copyOutgoingChar = outgoingChar;\n    let copyUpcomingChar = upcomingChar;\n\n    if (score === 0 || !isTimerRunning) {\n      start();\n      setIsTimerRunning(true);\n    }\n\n    if (key.toUpperCase() === currentChar) {\n      setScore(score + 1);\n\n      copyOutgoingChar += currentChar;\n      setOutgoingChar(copyOutgoingChar);\n\n      // console.log(upcomingChar.charAt(0));\n      if (upcomingChar.length !== 0) {\n        setCurrentChar(upcomingChar.charAt(0));\n\n        copyUpcomingChar = upcomingChar.substring(1);\n        setUpcomingChar(copyUpcomingChar);\n      } else {\n        if (time == 0) {\n          resetFn();\n          return;\n        }\n        setCurrentChar(score == 19 ? \"Success!\" : \"Fail!\");\n        pause();\n        if (\n          (highScore == 0 && score == 19) ||\n          (score == 19 && time < highScore)\n        ) {\n          localStorage.highScore = JSON.stringify(time);\n        }\n        setHighScore(localStorage.highScore);\n        reset();\n      }\n    } else if (!upcomingChar == \"\") {\n      setScore(score - 1);\n      advanceTime(500);\n    } else {\n      resetFn();\n    }\n  });\n\n  return (\n    <div className=\"App\">\n      <Credit autoFocusFn={autoFocus} />\n      <Heading />\n      <Display txt={currentChar} />\n      <Timer time={time} bestScore={highScore} />\n      <Input\n        refHook={inputRef}\n        value={outgoingChar}\n        keyPress={keyPress}\n        resetFn={resetFn}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nlocalStorage.setItem(\"highScore\", \"0\");\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}